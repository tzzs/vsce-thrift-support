{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Thrift",
  "scopeName": "source.thrift",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#types"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#identifiers"
    },
    {
      "include": "#operators"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.thrift",
          "begin": "//",
          "end": "$"
        },
        {
          "name": "comment.block.thrift",
          "begin": "/\\*",
          "end": "\\*/"
        },
        {
          "name": "comment.line.hash.thrift",
          "begin": "#",
          "end": "$"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.thrift",
          "match": "\\b(namespace|include|cpp_include|php_include|py_module|perl_package|ruby_namespace|smalltalk_category|smalltalk_prefix|java_package|cocoa_prefix|csharp_namespace|delphi_namespace|cpp_namespace|d_namespace|xsd_all|xsd_optional|xsd_nillable|xsd_namespace|xsd_attrs)\\b"
        },
        {
          "name": "keyword.other.thrift",
          "match": "\\b(const|typedef|enum|struct|union|exception|extends|service|oneway|void|throws|optional|required)\\b"
        },
        {
          "name": "storage.modifier.thrift",
          "match": "\\b(async|oneway)\\b"
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "storage.type.primitive.thrift",
          "match": "\\b(bool|byte|i8|i16|i32|i64|double|string|binary)\\b"
        },
        {
          "name": "storage.type.container.thrift",
          "match": "\\b(list|set|map)\\b"
        },
        {
          "name": "storage.type.user.thrift",
          "match": "\\b[A-Z][a-zA-Z0-9_]*\\b"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.thrift",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.thrift",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.single.thrift",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.thrift",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.hex.thrift",
          "match": "\\b0[xX][0-9a-fA-F]+\\b"
        },
        {
          "name": "constant.numeric.octal.thrift",
          "match": "\\b0[0-7]+\\b"
        },
        {
          "name": "constant.numeric.decimal.thrift",
          "match": "\\b[0-9]+\\.[0-9]+([eE][+-]?[0-9]+)?\\b"
        },
        {
          "name": "constant.numeric.integer.thrift",
          "match": "\\b[0-9]+\\b"
        }
      ]
    },
    "identifiers": {
      "patterns": [
        {
          "name": "variable.other.thrift",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.thrift",
          "match": "[=<>!&|+\\-*/%^~?:;,{}()\\[\\]]"
        }
      ]
    }
  }
}