{
  "name": "thrift-support",
  "displayName": "Thrift Support",
  "description": "Apache Thrift language support: syntax highlighting, formatter, and code navigation",
  "version": "0.3.8",
  "publisher": "tanzz",
  "icon": "icon.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/tzzs/vsce-thrift-support.git"
  },
  "engines": {
    "vscode": "^1.74.0"
  },
  "categories": [
    "Programming Languages",
    "Formatters"
  ],
  "keywords": [
    "thrift",
    "apache thrift",
    "thrift idl",
    "idl",
    "language support",
    "syntax highlighting",
    "highlighting",
    "formatter",
    "format",
    "code formatting",
    "code navigation",
    "go to definition",
    "definition",
    "include",
    "include navigation"
  ],
  "activationEvents": [
    "onLanguage:thrift"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "languages": [
      {
        "id": "thrift",
        "aliases": [
          "Thrift",
          "thrift"
        ],
        "extensions": [
          ".thrift"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "thrift",
        "scopeName": "source.thrift",
        "path": "./syntaxes/thrift.tmLanguage.json"
      }
    ],
    "commands": [
      {
        "command": "thrift.format.document",
        "title": "Format Document",
        "category": "Thrift"
      },
      {
        "command": "thrift.format.selection",
        "title": "Format Selection",
        "category": "Thrift"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Thrift Support Configuration",
      "properties": {
        "thrift.format.trailingComma": {
          "type": "string",
          "enum": [
            "preserve",
            "add",
            "remove"
          ],
          "default": "preserve",
          "description": "Control trailing comma behavior: preserve (keep existing), add (always add), remove (always remove)"
        },
        "thrift.format.alignTypes": {
          "type": "boolean",
          "default": true,
          "description": "Align field types in structs/unions/exceptions"
        },
        "thrift.format.alignNames": {
          "type": "boolean",
          "default": true,
          "description": "Align names for struct fields and enum members (unified control for field and enum names)"
        },
        "thrift.format.alignAssignments": {
          "type": "boolean",
          "default": true,
          "description": "Master switch to align '=' signs and values for both struct fields and enum members. When set, it overrides per-kind equals/values alignment; if not set explicitly, struct and enum fall back to their own defaults."
        },
        "thrift.format.alignStructDefaults": {
          "type": "boolean",
          "default": false,
          "description": "Align '=' signs for struct field default values (e.g., 'field = defaultValue'). This is separate from alignStructEquals which controls general struct field assignments."
        },
        "thrift.format.alignAnnotations": {
          "type": "boolean",
          "default": true,
          "description": "Align inline annotations (e.g., (go.tag='json:...')) for struct fields and enum members (unified control)."
        },
        "thrift.format.alignComments": {
          "type": "boolean",
          "default": true,
          "description": "Align inline comments"
        },
        "thrift.format.indentSize": {
          "type": "number",
          "default": 4,
          "description": "Number of spaces for indentation"
        },
        "thrift.format.maxLineLength": {
          "type": "number",
          "default": 100,
          "description": "Maximum line length for formatting"
        },
        "thrift.format.collectionStyle": {
          "type": "string",
          "enum": [
            "preserve",
            "multiline",
            "auto"
          ],
          "default": "preserve",
          "description": "How to format collection values in const declarations: preserve (keep inline), multiline (always expand), auto (expand if line exceeds maxLineLength)"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "lint": "eslint src --ext ts",
    "clean": "rimraf out",
    "build": "npm run clean && npm run compile",
    "package": "npx @vscode/vsce package",
    "publish": "npx @vscode/vsce publish",
    "test": "node tests/test-include-navigation-fix.js",
    "test:complex": "node tests/test-complex-types.js",
    "test:enum": "node tests/test-enum-formatting.js",
    "test:indent": "node tests/test-indent-width.js",
    "test:comma": "node tests/test-trailing-comma.js",
    "test:const": "node tests/test-const-formatting.js",
    "test:all": "npm run test && npm run test:complex && npm run test:enum && npm run test:indent && npm run test:comma && npm run test:const",
    "test:all:node": "node tests/run-all.js",
    "coverage": "nyc --reporter=text-summary node tests/run-all.js"
  },
  "devDependencies": {
    "@types/node": "16.x",
    "@types/vscode": "^1.74.0",
    "@typescript-eslint/eslint-plugin": "^5.45.0",
    "@typescript-eslint/parser": "^5.45.0",
    "@vscode/vsce": "^3.6.0",
    "eslint": "^8.28.0",
    "nyc": "^15.1.0",
    "rimraf": "^3.0.2",
    "typescript": "^4.9.4"
  },
  "nyc": {
    "include": [
      "src/**/*.ts",
      "out/**/*.js"
    ],
    "exclude": [
      "tests/**"
    ],
    "extension": [
      ".js",
      ".ts"
    ],
    "all": false,
    "sourceMap": true,
    "instrument": true,
    "reporter": [
      "text-summary",
      "lcov"
    ]
  }
}
