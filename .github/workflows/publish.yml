name: publish

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  package:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.pkg.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.18.0

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build --if-present

      - name: Read version from package.json
        id: pkg
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Package VSIX
        run: npx vsce package -o thrift-support-${{ steps.pkg.outputs.version }}.vsix

      - name: Upload VSIX artifact
        uses: actions/upload-artifact@v4
        with:
          name: vsix-artifact
          path: thrift-support-${{ steps.pkg.outputs.version }}.vsix
          if-no-files-found: error

  github_release:
    needs: package
    runs-on: ubuntu-latest
    steps:
      - name: Download VSIX artifact
        uses: actions/download-artifact@v4
        with:
          name: vsix-artifact
          path: .

      - name: Upload VSIX to GitHub Release (release event)
        if: ${{ github.event_name == 'release' }}
        uses: softprops/action-gh-release@v2
        with:
          files: thrift-support-${{ needs.package.outputs.version }}.vsix
          tag_name: ${{ github.event.release.tag_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload/Create GitHub Release (manual)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.package.outputs.version }}
          name: v${{ needs.package.outputs.version }}
          target_commitish: ${{ github.sha }}
          generate_release_notes: true
          files: thrift-support-${{ needs.package.outputs.version }}.vsix
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  vsce_publish:
    needs: package
    runs-on: ubuntu-latest
    environment: vsce
    env:
      VSCE_PAT: ${{ secrets.VSCE_PAT || secrets.VSCE_TOKEN }}
    steps:
      - name: Download VSIX artifact
        uses: actions/download-artifact@v4
        with:
          name: vsix-artifact
          path: .

      - name: Ensure VSCE token present
        run: |
          if [ -z "${VSCE_PAT}" ]; then
            echo "VSCE_PAT/VSCE_TOKEN is not configured in repository or environment 'vsce'." >&2
            exit 1
          fi

      - name: Publish to VS Code Marketplace
        run: npx vsce publish --skip-duplicate --packagePath thrift-support-${{ needs.package.outputs.version }}.vsix

  openvsx_publish:
    needs: package
    runs-on: ubuntu-latest
    environment: vsce
    env:
      OVSX_PAT: ${{ secrets.OVSX_PAT || secrets.OPENVSX_TOKEN }}
    steps:
      - name: Download VSIX artifact
        uses: actions/download-artifact@v4
        with:
          name: vsix-artifact
          path: .

      - name: Ensure Open VSX token present
        run: |
          if [ -z "${OVSX_PAT}" ]; then
            echo "OVSX_PAT/OPENVSX_TOKEN is not configured in repository or environment 'vsce'." >&2
            exit 1
          fi

      - name: Publish to Open VSX
        run: npx ovsx publish --skip-duplicate --packagePath thrift-support-${{ needs.package.outputs.version }}.vsix